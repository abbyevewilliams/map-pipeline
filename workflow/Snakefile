# =================================================================================================
#     Setup
# =================================================================================================

# Packages
import pandas as pd
import os

# Point to config file
configfile: "config/config.yaml"

# Read in sample names
with open(config["samples"]) as f:
    SAMPLES = [line.strip() for line in f]

# State reads
READS = ['1', '2']

# Check whether to run fastp and mapdamage
RUN_FASTP=config["run_fastp"]
MAPDAMAGE_RESCALE=config["mapdamage_rescale"]

# =================================================================================================
#     Default "All" Target Rule
# =================================================================================================

# This rule requests that other rules be run.

rule all:
    input:
        expand("results/fastqc/{sample}_{read}.html", sample=SAMPLES, read=READS), # fastqc report
        expand("results/fastp/{sample}_1.fastq.gz", sample=SAMPLES) if RUN_FASTP else [],  # fastp processed reads
        expand("results/fastp/{sample}_2.fastq.gz", sample=SAMPLES) if RUN_FASTP else [],  # fastp processed reads
        expand("results/fastqc_post_trim/{sample}_{read}.html", sample=SAMPLES, read=READS) if RUN_FASTP else [], # fastqc report (post trim)
        expand("results/sorted/{sample}.bam.bai", sample=SAMPLES),              # indexed bams
        expand("results/dedup/{sample}.sorted.bam.bai", sample=SAMPLES),        # deduplicated bams
        expand("results/dedup/{sample}.stats", sample=SAMPLES),                 # mapping stats
        expand("results/dedup/{sample}.depth", sample=SAMPLES),                 # depth stats
        "results/mapping_summary.txt",                                          # summary of stats
        "results/avg_depth.txt",                                                # average depth
        expand("results/mapdamage/{sample}/{sample}.rescaled.bam", sample=SAMPLES) if MAPDAMAGE_RESCALE else [], # mapdamage results
        expand("results/mapdamage/{sample}/{sample}.rescaled.bam.bai", sample=SAMPLES) if MAPDAMAGE_RESCALE else []  # indexed mapdamage results

localrules:
    all

# =================================================================================================
#     Rule Modules
# =================================================================================================


include: "rules/fastqc.smk"
include: "rules/map.smk"
if MAPDAMAGE_RESCALE:
    include: "rules/damage.smk"
if RUN_FASTP:
    include: "rules/fastp.smk"